{"version":3,"sources":["Components/Calculator/enumerations.ts","App.tsx","Components/Calculator/ResultComponent.tsx","Components/Calculator/keypadListJson.ts","Components/Calculator/KeypadComponent.tsx","index.tsx"],"names":["EnumLabel","EnumLabelTypes","__webpack_require__","d","__webpack_exports__","useStyles","theme","_root","_calc","_result","_keypad","root","flexGrow","margin","height","maxWidth","display","flexDirection","Object","_home_jenifer_Documents_React_material_calculator_basic_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","breakpoints","only","padding","calc","alignItems","result","&.result-grid","paddingRight","spacing","&.result-grid .MuiGrid-item h2","fontSize","@media (orientation: landscape)","&.result-grid .MuiInputBase-input","@media (orientation: portrait)","keypad","&.MuiGrid-item","textAlign","up","&.keypad .MuiButton-label","App","props","_this","_home_jenifer_Documents_React_material_calculator_basic_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_jenifer_Documents_React_material_calculator_basic_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_jenifer_Documents_React_material_calculator_basic_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","numberPattern","decimalPattern","onSelectValue","event","value","target","textContent","Equals","calculate","Percent","onClickPercent","Delete","onClickUndo","Zero","toString","expressionValue","state","lastChar","charAt","length","isNaN","arithmeticExpression","AllClear","onClickAllClear","test","resultantValue","evaluateExpression","setState","errorMsg","percent","calculatedValue","slice","render","classes","react__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","className","fixed","_Components_Calculator_ResultComponent__WEBPACK_IMPORTED_MODULE_11__","resultObj","_Components_Calculator_KeypadComponent__WEBPACK_IMPORTED_MODULE_10__","decimalvalue","substring","lastIndexOf","Div","eval","React","withStyles","ResultComponent","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","container","item","md","lg","xl","xs","multiline","readOnly","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","paragraph","align","variant","component","KeypadListJson","classCallCheck","createClass","key","id","Clear","type","Event","Operator","Seven","Numeric","Eight","Nine","Add","Four","Five","Six","Sub","One","Two","Three","Decimal","Action","Mul","KeypadComponent","obj_list","keypadList","sortList","isDisabled","window","matchMedia","matches","innerWidth","getKeypadList","checkDeviceOrientation","sort","a","b","addEventListener","reorderList","bind","removeEventListener","thisObj","react","Grid","justify","map","keypadItem","index","sm","getColumnSpan","Button","name","disabled","onClick","r","react__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_1__","_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.495fd45f.chunk.js","sourcesContent":["export enum EnumLabel {\n  AllClear = \"AC\",\n  Clear = \"\",\n  Percent = \"%\",\n  Delete = \"Del\",\n  Zero = 0,\n  One = 1,\n  Two = 2,\n  Three = 3,\n  Four = 4,\n  Five = 5,\n  Six = 6,\n  Seven = 7,\n  Eight = 8,\n  Nine = 9,\n  Add = \"+\",\n  Sub = \"-\",\n  Mul = \"*\",\n  Div = \"/\",\n  Decimal = \".\",\n  Equals = \"=\"\n}\n\nexport enum EnumLabelTypes {\n  Numeric = \"number\",\n  Operator = \"operator\",\n  Action = \"action\",\n  Event = \"event\"\n}\n","import * as React from \"react\";\nimport \"./index.css\";\nimport { Container } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport KeypadComponent from \"./Components/Calculator/KeypadComponent\";\nimport ResultComponent from \"./Components/Calculator/ResultComponent\";\nimport { EnumLabel } from \"./Components/Calculator/enumerations\";\nimport { IAppState } from \"./Components/Calculator/interface\";\n\nconst useStyles = (theme: any) => ({\n  root: {\n    flexGrow: 1,\n    margin: \"auto\",\n    height: \"100%\",\n    maxWidth: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n\n    [theme.breakpoints.only(\"xs\")]: {\n      margin: 0,\n      padding: 0,\n      display: \"block\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      margin: 0,\n      padding: 0,\n      display: \"block\"\n    }\n  },\n\n  calc: {\n    margin: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    alignItems: \"center\",\n\n    [theme.breakpoints.only(\"xs\")]: {\n      height: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      height: \"100%\"\n    }\n  },\n\n  result: {\n    \"&.result-grid\": {\n      paddingRight: theme.spacing(2)\n    },\n\n    [theme.breakpoints.only(\"xs\")]: {\n      height: \"35%\",\n      \"&.result-grid .MuiGrid-item h2\": {\n        fontSize: \"3.75rem\"\n      },\n      \"@media (orientation: landscape)\": {\n        \"&.result-grid .MuiInputBase-input\": {\n          fontSize: \"1.5rem\"\n        },\n        \"&.result-grid .MuiGrid-item h2\": {\n          fontSize: \"2rem\"\n        }\n      }\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      height: \"40%\",\n      \"&.result-grid\": {\n        paddingRight: theme.spacing(4)\n      },\n      \"@media (orientation: portrait)\": {\n        \"&.result-grid .MuiInputBase-input\": {\n          fontSize: \"4rem\"\n        },\n        \"&.result-grid .MuiGrid-item h2\": {\n          fontSize: \"6rem\"\n        }\n      }\n    }\n  },\n\n  keypad: {\n    \"&.MuiGrid-item\": {\n      textAlign: \"center\" as \"center\"\n    },\n\n    [theme.breakpoints.only(\"xs\")]: {\n      height: \"65%\"\n    },\n    [theme.breakpoints.up(\"xs\")]: {\n      \"&.keypad .MuiButton-label\": {\n        fontSize: \"25px\"\n      },\n      \"@media (orientation: landscape)\": {\n        \"&.keypad .MuiButton-label\": {\n          fontSize: \"16px\"\n        }\n      }\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"60%\",\n      \"@media (orientation: portrait)\": {\n        \"&.keypad .MuiButton-label\": {\n          fontSize: \"45px\"\n        }\n      }\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      height: \"65%\",\n      \"&.keypad .MuiButton-label\": {\n        fontSize: \"20px\"\n      }\n    }\n  }\n});\n\nclass App extends React.Component<any, IAppState> {\n  numberPattern = /^[0-9\\b]+$/;\n  decimalPattern = /^[0-9.\\b]+$/;\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      expressionValue: \"\",\n      result: 0,\n      errorMsg: \"\"\n    };\n  }\n\n  onSelectValue = (event: any) => {\n    // event.persist();\n    const value = event.target.textContent;\n    switch (value) {\n      case EnumLabel.Equals:\n        this.calculate();\n        break;\n      case EnumLabel.Percent:\n        // this.calculate();\n        this.onClickPercent();\n        break;\n      case EnumLabel.Delete:\n        this.onClickUndo();\n        break;\n      case EnumLabel.Zero.toString():\n        // To Check Octal Literals\n        const expressionValue = this.state.expressionValue;\n        const lastChar = expressionValue.charAt(expressionValue.length - 1);\n        if (lastChar && !isNaN(lastChar)) {\n          this.arithmeticExpression(value);\n        }\n        break;\n      case EnumLabel.AllClear:\n        this.onClickAllClear();\n        break;\n      default:\n        this.arithmeticExpression(value);\n        break;\n    }\n  };\n\n  arithmeticExpression(value: any) {\n    const expressionValue = this.state.expressionValue;\n    const decimalvalue = expressionValue.substring(\n      expressionValue.lastIndexOf(\".\"),\n      expressionValue.length\n    );\n    const lastChar = expressionValue.charAt(expressionValue.length - 1);\n    const decimalPattern = /^((\\.\\d+\\.))/;\n    if (\n      (isNaN(lastChar) && isNaN(value) && expressionValue.length > 0) ||\n      decimalPattern.test(decimalvalue + value)\n    ) {\n      this.setState({ errorMsg: \"Invalid Expression\" });\n    } else {\n      if (lastChar === EnumLabel.Div && value === 0) {\n        const msg: any = \"Can't Divide by Zero\";\n        this.setState({\n          result: msg,\n          errorMsg: \"\"\n        });\n      } else {\n        this.setState({\n          expressionValue: expressionValue + value,\n          errorMsg: \"\"\n        });\n      }\n    }\n  }\n\n  calculate = () => {\n    if (\n      this.numberPattern.test(\n        this.state.expressionValue.charAt(this.state.expressionValue.length - 1)\n      )\n    ) {\n      let resultantValue = this.evaluateExpression();\n      // let numericValue = Number.isInteger(resultantValue)\n      //   ? resultantValue\n      //   : Number(parseFloat(resultantValue).toFixed(6));\n      this.setState({ result: resultantValue, errorMsg: \"\" });\n    }\n  };\n\n  evaluateExpression() {\n    // var splitUp = this.state.expressionValue.match(/[^\\d()]+|[\\d.]+/g);\n    // console.log(splitUp);\n    return eval(this.state.expressionValue);\n  }\n\n  onClickPercent = () => {\n    let percent = 0;\n    if (\n      this.numberPattern.test(\n        this.state.expressionValue.charAt(this.state.expressionValue.length - 1)\n      )\n    ) {\n      let calculatedValue = this.evaluateExpression();\n      if (!isNaN(calculatedValue)) {\n        // if (!this.state.result || this.state.result === 0) {\n        percent = calculatedValue / 100;\n        //   //this.decimalPattern.test(this.state.expressionValue) ? this.state.expressionValue : 0;\n        // } else {\n        //   percent = this.state.result / 100;\n        // }\n        this.setState({\n          result: percent, //Number.isInteger(percent) ? percent : Number(percent.toFixed(6)),\n          expressionValue: percent && percent !== 0 ? percent.toString() : \"\",\n          errorMsg: \"\"\n        });\n      }\n    }\n  };\n\n  onClickAllClear = () => {\n    this.setState({\n      expressionValue: \"\",\n      result: 0,\n      errorMsg: \"\"\n    });\n  };\n\n  onClickUndo = () => {\n    this.setState({\n      expressionValue: this.state.expressionValue.slice(0, -1),\n      errorMsg: \"\"\n    });\n  };\n\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <Container className={classes.root} fixed maxWidth={false}>\n        <div className={classes.calc}>\n          <ResultComponent resultObj={this.state} className={classes.result} />\n          <KeypadComponent\n            className={classes.keypad}\n            expressionValue={this.state.expressionValue}\n            onSelectValue={this.onSelectValue}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default withStyles(useStyles)(App);\n","import \"../../index.css\";\nimport * as React from \"react\";\nimport { Typography, InputBase, Grid } from \"@material-ui/core\";\nimport { IResultProps } from \"./interface\";\n\nexport default class ResultComponent extends React.Component<IResultProps> {\n  // constructor(props: any) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n      <Grid\n        container\n        className={this.props.className + \" result-grid\"}\n        spacing={0}\n        alignItems=\"center\"\n        item={true}\n        md={4}\n        lg={3}\n        xl={3}\n      >\n        <Grid item xs={12}>\n          <InputBase\n            value={this.props.resultObj.expressionValue}\n            multiline={true}\n            readOnly\n          />\n          {/* <TextField value={this.props.resultObj.expressionValue} /> */}\n        </Grid>\n        <Grid item xs={2}>\n          <Typography\n            paragraph={true}\n            align=\"center\"\n            variant=\"h2\"\n            component=\"h2\"\n          >\n            =\n          </Typography>\n        </Grid>\n        <Grid item xs={10}>\n          <Typography\n            paragraph={true}\n            variant=\"h2\"\n            component=\"h2\"\n            align=\"right\"\n            className=\"word-wrap\"\n          >\n            {this.props.resultObj.result}\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import { EnumLabel, EnumLabelTypes } from \"./enumerations\";\n\nexport class KeypadListJson {\n  getKeypadList() {\n    return [\n      {\n        id: 1,\n        value: EnumLabel.Clear,\n        type: EnumLabelTypes.Event,\n        className: \"\"\n      },\n      {\n        id: 2,\n        value: EnumLabel.AllClear,\n        type: EnumLabelTypes.Event,\n        className: \"\"\n      },\n      {\n        id: 3,\n        value: EnumLabel.Percent,\n        type: EnumLabelTypes.Event,\n        className: \"\"\n      },\n      {\n        id: 4,\n        value: EnumLabel.Delete,\n        type: EnumLabelTypes.Operator,\n        className: \"operator\"\n      },\n      {\n        id: 5,\n        value: EnumLabel.Seven,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 6,\n        value: EnumLabel.Eight,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 7,\n        value: EnumLabel.Nine,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 8,\n        value: EnumLabel.Add,\n        type: EnumLabelTypes.Operator,\n        className: \"operator\"\n      },\n      {\n        id: 9,\n        value: EnumLabel.Four,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 10,\n        value: EnumLabel.Five,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 11,\n        value: EnumLabel.Six,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 12,\n        value: EnumLabel.Sub,\n        type: EnumLabelTypes.Operator,\n        className: \"operator\"\n      },\n      {\n        id: 13,\n        value: EnumLabel.One,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 14,\n        value: EnumLabel.Two,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 15,\n        value: EnumLabel.Three,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 16,\n        value: EnumLabel.Div,\n        type: EnumLabelTypes.Operator,\n        className: \"operator\"\n      },\n      {\n        id: 17,\n        value: EnumLabel.Decimal,\n        type: EnumLabelTypes.Event,\n        className: \"\"\n      },\n      {\n        id: 18,\n        value: EnumLabel.Zero,\n        type: EnumLabelTypes.Numeric,\n        className: \"\"\n      },\n      {\n        id: 19,\n        value: EnumLabel.Equals,\n        type: EnumLabelTypes.Action,\n        className: \"\"\n      },\n      {\n        id: 20,\n        value: EnumLabel.Mul,\n        type: EnumLabelTypes.Operator,\n        className: \"operator\"\n      }\n    ];\n  }\n}\n","import * as React from \"react\";\nimport \"../../index.css\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { EnumLabelTypes } from \"./enumerations\";\nimport { KeypadListJson } from \"./keypadListJson\";\nimport { IKeypadState, IKeypadProps } from \"./interface\";\n\nexport default class KeypadComponent extends React.Component<\n  IKeypadProps,\n  IKeypadState\n> {\n  numberPattern = /^[0-9\\b]+$/;\n  // constructor(props: any) {\n  //   super(props);\n  // }\n  obj_list: any = new KeypadListJson();\n  state = {\n    keypadList: this.sortList()\n  };\n\n  checkDeviceOrientation() {\n    if (\n      window.matchMedia(\"(orientation: landscape)\").matches &&\n      window.innerWidth < 920 // To check orientation type and small device (sm) screen size\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  sortList() {\n    const value = this.obj_list.getKeypadList();\n    if (this.checkDeviceOrientation()) {\n      return value.sort(function(a: any, b: any) {\n        // Sort by type(operators, numbers and Events) in descending order\n        if (a.type > b.type) {\n          return -1;\n        }\n        if (a.type < b.type) {\n          return 1;\n        }\n        if (a.type === b.type) {\n          // If type equal Sort values in descending order\n          if (a.value > b.value) {\n            return -1;\n          }\n          if (a.value < b.value) {\n            return 1;\n          }\n          return 0;\n        }\n      });\n    }\n    return value;\n  }\n\n  reorderList() {\n    this.setState({\n      keypadList: this.sortList()\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.reorderList.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.reorderList.bind(this));\n  }\n\n  isDisabled = (type: any) => {\n    if (type === EnumLabelTypes.Operator && !this.props.expressionValue) {\n      return true;\n    }\n    return false;\n  };\n\n  getColumnSpan() {\n    if (this.checkDeviceOrientation()) {\n      return 2;\n    }\n    return false;\n  }\n\n  render() {\n    const props = this.props;\n    const thisObj = this;\n    return (\n      <Grid\n        className={this.props.className + \" keypad\"}\n        container\n        item={true}\n        spacing={0}\n        md={4}\n        lg={3}\n        xl={3}\n        justify=\"center\"\n      >\n        {this.state.keypadList.map(function(keypadItem: any, index: any) {\n          return (\n            <Grid\n              item\n              key={keypadItem.id}\n              className={keypadItem.className}\n              xs={3}\n              sm={thisObj.getColumnSpan()}\n            >\n              <Button\n                key={keypadItem.id}\n                name={keypadItem.value.toString()}\n                // className={` ${\n                //   keypadItem.type === EnumLabelTypes.Operator ? \"operator\" : \"\"\n                // }`}\n                disabled={thisObj.isDisabled(keypadItem.type)}\n                onClick={props.onSelectValue}\n              >\n                <span>{keypadItem.value}</span>\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n// import 'bootstrap/dist/css/bootstrap.css';\n// import \"font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}